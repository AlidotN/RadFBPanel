// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadFBApp.Models;

namespace RadFBApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250307072523_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_AnswerToQuestion", b =>
                {
                    b.Property<long>("ParentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ChildID")
                        .HasColumnType("bigint");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RegisterDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_QuestiontID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("postDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentID");

                    b.HasIndex("fk_QuestiontID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_AnswerToQuestion");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_BlockedUsers", b =>
                {
                    b.Property<long>("BlockedUsersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlockExplantion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_BlockedUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_BlockingUSerID")
                        .HasColumnType("bigint");

                    b.HasKey("BlockedUsersID");

                    b.HasIndex("fk_BlockingUSerID");

                    b.ToTable("Tbl_BlockedUsers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_CommentLike", b =>
                {
                    b.Property<long>("CommentLikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_AnswerToQuestionID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("CommentLikeID");

                    b.HasIndex("fk_AnswerToQuestionID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_CommentLike");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_CooperationType", b =>
                {
                    b.Property<int>("CooperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnCooperationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrCooperationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CooperationID");

                    b.ToTable("Tbl_CooperationType");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_DeclarationOfReadiness", b =>
                {
                    b.Property<long>("DeclarationOfReadinessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_questionnaireID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_volunteerUserID")
                        .HasColumnType("bigint");

                    b.HasKey("DeclarationOfReadinessID");

                    b.HasIndex("fk_questionnaireID");

                    b.HasIndex("fk_volunteerUserID");

                    b.ToTable("Tbl_DeclarationOfReadiness");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_EmploymentAdvApply", b =>
                {
                    b.Property<long>("EmploymentAdvApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_ApplicantUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_postID")
                        .HasColumnType("bigint");

                    b.HasKey("EmploymentAdvApplyID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("fk_ApplicantUserID");

                    b.HasIndex("fk_postID");

                    b.ToTable("Tbl_EmploymentAdvApply");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_EmploymentAdvPost", b =>
                {
                    b.Property<long>("EmploymentAdvPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("EdvStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("EdvType")
                        .HasColumnType("bit");

                    b.Property<string>("SkillsReqired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkExprience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_CooperationTypeID")
                        .HasColumnType("int");

                    b.Property<long>("fk_PostID")
                        .HasColumnType("bigint");

                    b.Property<int>("fk_countryID")
                        .HasColumnType("int");

                    b.Property<int>("fk_genderID")
                        .HasColumnType("int");

                    b.Property<long>("fk_grageID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_jobCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_mssID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_provinceID")
                        .HasColumnType("bigint");

                    b.Property<string>("salary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmploymentAdvPostID");

                    b.HasIndex("fk_CooperationTypeID");

                    b.HasIndex("fk_PostID");

                    b.HasIndex("fk_countryID");

                    b.HasIndex("fk_genderID");

                    b.HasIndex("fk_grageID");

                    b.HasIndex("fk_jobCategoryID");

                    b.HasIndex("fk_mssID");

                    b.HasIndex("fk_provinceID");

                    b.ToTable("Tbl_EmploymentAdvPost");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_FrequentlyAskedQuestions", b =>
                {
                    b.Property<long>("FrequentlyAskedQuestionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("EnAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("fk_SubjectID")
                        .HasColumnType("bigint");

                    b.Property<string>("prAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("FrequentlyAskedQuestionsID");

                    b.HasIndex("fk_SubjectID");

                    b.ToTable("Tbl_FrequentlyAskedQuestions");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_FrequentlyAskedQuestionsSubject", b =>
                {
                    b.Property<long>("FrequentlyAskedQuestionsSubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FrequentlyAskedQuestionsSubjectID");

                    b.ToTable("Tbl_FrequentlyAskedQuestionsSubject");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Introduction", b =>
                {
                    b.Property<long>("IntroductionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("EnPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntroductionID");

                    b.ToTable("Tbl_Introduction");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Logins", b =>
                {
                    b.Property<long>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("deviceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("loginDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loginTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_Logins");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_MuteUsers", b =>
                {
                    b.Property<long>("MuteUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_MutedUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("MuteUserID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_MuteUsers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_PostFile", b =>
                {
                    b.Property<long>("postFileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("FileAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_postID")
                        .HasColumnType("bigint");

                    b.Property<string>("picAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postFileID");

                    b.HasIndex("fk_postID");

                    b.ToTable("Tbl_PostFile");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_PostForward", b =>
                {
                    b.Property<long>("PostForwardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_ForwardedUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_ForwardingUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_PostID")
                        .HasColumnType("bigint");

                    b.HasKey("PostForwardID");

                    b.HasIndex("fk_ForwardedUserID");

                    b.HasIndex("fk_PostID");

                    b.ToTable("Tbl_PostForward");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_PostLike", b =>
                {
                    b.Property<long>("PostLikeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_PostID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("PostLikeID");

                    b.HasIndex("fk_PostID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_PostLike");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Question", b =>
                {
                    b.Property<long>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long?>("Tbl_provinceprovinceID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_JobCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_postID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_subjectID")
                        .HasColumnType("bigint");

                    b.HasKey("QuestionID");

                    b.HasIndex("Tbl_provinceprovinceID");

                    b.HasIndex("fk_JobCategoryID");

                    b.HasIndex("fk_postID");

                    b.HasIndex("fk_subjectID");

                    b.ToTable("Tbl_Question");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_RadFBUsers", b =>
                {
                    b.Property<long>("RadFbUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RegisterDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_countryID")
                        .HasColumnType("int");

                    b.Property<long>("fk_jobCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_provinceID")
                        .HasColumnType("bigint");

                    b.Property<int>("fk_userTypeID")
                        .HasColumnType("int");

                    b.Property<string>("inactiveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interdusedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastSeenDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("userStatus")
                        .HasColumnType("bit");

                    b.HasKey("RadFbUserID");

                    b.HasIndex("fk_countryID");

                    b.HasIndex("fk_jobCategoryID");

                    b.HasIndex("fk_provinceID");

                    b.HasIndex("fk_userTypeID");

                    b.ToTable("Tbl_RadFBUsers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_RealCient", b =>
                {
                    b.Property<long>("RealClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_maritalstatus")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("companyDesire")
                        .HasColumnType("bit");

                    b.Property<int>("fk_CooperationID")
                        .HasColumnType("int");

                    b.Property<int>("fk_GenderID")
                        .HasColumnType("int");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_mssID")
                        .HasColumnType("bigint");

                    b.Property<string>("suggestSAlary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RealClientID");

                    b.HasIndex("Fk_maritalstatus");

                    b.HasIndex("fk_CooperationID");

                    b.HasIndex("fk_GenderID");

                    b.HasIndex("fk_UserID");

                    b.HasIndex("fk_mssID");

                    b.ToTable("Tbl_RealCient");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Skills", b =>
                {
                    b.Property<long>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnSkillTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSkillTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillID");

                    b.ToTable("Tbl_Skills");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_SuggestionUsers", b =>
                {
                    b.Property<long>("SuggestionUsersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_SuggestedUSerID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("SuggestionUsersID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_SuggestionUsers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UnauthorizedWords", b =>
                {
                    b.Property<long>("UnauthorizedWordsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("enWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fk_ApplicationUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("prWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("registerDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnauthorizedWordsID");

                    b.HasIndex("fk_ApplicationUser");

                    b.ToTable("Tbl_UnauthorizedWords");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserEducationalBackground", b =>
                {
                    b.Property<long>("UserEduBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_gradeID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_majorID")
                        .HasColumnType("bigint");

                    b.HasKey("UserEduBackID");

                    b.HasIndex("fk_UserID");

                    b.HasIndex("fk_gradeID");

                    b.HasIndex("fk_majorID");

                    b.ToTable("Tbl_UserEducationalBackground");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserFavorites", b =>
                {
                    b.Property<long>("UserFavoriteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserFavoriteID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_UserFavorites");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserJobStatus", b =>
                {
                    b.Property<long>("UserJobStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_JobStatusID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("UserJobStatusID");

                    b.HasIndex("fk_JobStatusID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_UserJobStatus");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserRegistrationCourses", b =>
                {
                    b.Property<long>("UserRegistrationCoursesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("UserRegistrationStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_RegisteredUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_posterID")
                        .HasColumnType("bigint");

                    b.HasKey("UserRegistrationCoursesID");

                    b.HasIndex("fk_RegisteredUserID");

                    b.HasIndex("fk_posterID");

                    b.ToTable("Tbl_UserRegistrationCourses");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserWorkExperience", b =>
                {
                    b.Property<long>("UserEduBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("FromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("post")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserEduBackID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_UserWorkExperience");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserWorkExperienceStamp", b =>
                {
                    b.Property<long>("UserWorkExperienceStampID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserWorkExperienceID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_stampedUSerID")
                        .HasColumnType("bigint");

                    b.HasKey("UserWorkExperienceStampID");

                    b.HasIndex("fk_UserID");

                    b.HasIndex("fk_UserWorkExperienceID");

                    b.ToTable("Tbl_UserWorkExperienceStamp");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UsersPackage", b =>
                {
                    b.Property<long>("UserPackagesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("expiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_packageID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_payID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("UserPackagesID");

                    b.HasIndex("fk_packageID");

                    b.HasIndex("fk_payID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_UsersPackage");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UsersSkills", b =>
                {
                    b.Property<long>("UsersSkillsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_SkillID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("UsersSkillsID");

                    b.HasIndex("fk_SkillID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_UsersSkills");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_VisitedPosts", b =>
                {
                    b.Property<long>("VisitedPostsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_PostID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.HasKey("VisitedPostsID");

                    b.HasIndex("fk_PostID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_VisitedPosts");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Voluntaryworks", b =>
                {
                    b.Property<long>("VoluntaryworkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("VoluntaryworkTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("VoluntaryworkID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_Voluntaryworks");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_activeSesion", b =>
                {
                    b.Property<long>("activeSesionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("deviceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("activeSesionID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_activeSesion");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_activities", b =>
                {
                    b.Property<long>("activityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("avtivityTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("activityID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_activities");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_awards", b =>
                {
                    b.Property<long>("awardsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("awardsTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("awardsID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_awards");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_calender", b =>
                {
                    b.Property<long>("calenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("calenderEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("calenderStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("calenderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("calenderID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_calender");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_countries", b =>
                {
                    b.Property<int>("countryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("countryID");

                    b.ToTable("Tbl_countries");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_criticsAndSuggestions", b =>
                {
                    b.Property<long>("criticsAndSuggestionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RegisterDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_senderUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("txtMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("criticsAndSuggestionsID");

                    b.HasIndex("fk_senderUserID");

                    b.ToTable("Tbl_criticsAndSuggestions");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_dialog", b =>
                {
                    b.Property<long>("notificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("enNotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enNotificationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prNotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prnotificationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("notificationID");

                    b.ToTable("Tbl_dialog");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_discount", b =>
                {
                    b.Property<long>("discountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<int>("discountPercent")
                        .HasColumnType("int");

                    b.Property<string>("discountTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("discountID");

                    b.ToTable("Tbl_discount");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_factor", b =>
                {
                    b.Property<long>("factorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_payID")
                        .HasColumnType("bigint");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("price")
                        .HasColumnType("bigint");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("factorID");

                    b.HasIndex("fk_payID");

                    b.ToTable("Tbl_factor");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_followers", b =>
                {
                    b.Property<long>("followersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_followerUSerID")
                        .HasColumnType("bigint");

                    b.Property<bool>("seePostsAllow")
                        .HasColumnType("bit");

                    b.HasKey("followersID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_followers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_gender", b =>
                {
                    b.Property<int>("GenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnGenderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrGenderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderID");

                    b.ToTable("Tbl_gender");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_grade", b =>
                {
                    b.Property<long>("gradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("EnGradeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrGradeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gradeID");

                    b.ToTable("Tbl_grade");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_group", b =>
                {
                    b.Property<long>("groupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_creatorUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("groupTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("groupID");

                    b.HasIndex("fk_creatorUserID");

                    b.ToTable("Tbl_group");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_groupException", b =>
                {
                    b.Property<long>("groupExceptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_ExecptionGroupID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("groupExceptionID");

                    b.HasIndex("fk_ExecptionGroupID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_groupException");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_groupMessages", b =>
                {
                    b.Property<long>("groupMessagesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_groupID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_messageTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_senderUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("groupMessageDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("groupMessageIsSeen")
                        .HasColumnType("bit");

                    b.Property<string>("groupMessagePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupMessageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupMessageTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupMessageVoice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("groupMessagesID");

                    b.HasIndex("fk_groupID");

                    b.HasIndex("fk_messageTypeID");

                    b.HasIndex("fk_senderUserID");

                    b.ToTable("Tbl_groupMessages");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_guild", b =>
                {
                    b.Property<long>("guildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("EnguildNAme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FAguildNAme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guildColor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("guildID");

                    b.ToTable("Tbl_guild");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_jobCategory", b =>
                {
                    b.Property<long>("jobCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnJobCategoryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrJobCategoryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_guildID")
                        .HasColumnType("bigint");

                    b.HasKey("jobCategoryID");

                    b.HasIndex("fk_guildID");

                    b.ToTable("Tbl_jobCategory");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_jobStatus", b =>
                {
                    b.Property<long>("jobStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnJobStatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrJobStatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("jobStatusID");

                    b.ToTable("Tbl_jobStatus");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_keyWords", b =>
                {
                    b.Property<long>("keyWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_postID")
                        .HasColumnType("bigint");

                    b.Property<string>("keyWord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("keyWordID");

                    b.HasIndex("fk_postID");

                    b.ToTable("Tbl_keyWords");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_legalClient", b =>
                {
                    b.Property<long>("legalClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEOName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfEstablishment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RegisterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aboutCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("membersCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natioalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("legalClientID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_legalClient");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_major", b =>
                {
                    b.Property<long>("majorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnMajorTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PrMajorTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("majorID");

                    b.ToTable("Tbl_major");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_memberOfGroup", b =>
                {
                    b.Property<long>("memberOfGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_groupID")
                        .HasColumnType("bigint");

                    b.HasKey("memberOfGroupID");

                    b.HasIndex("fk_UserID");

                    b.HasIndex("fk_groupID");

                    b.ToTable("Tbl_memberOfGroup");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_messageType", b =>
                {
                    b.Property<long>("messageTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("messageTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("messageTypeID");

                    b.ToTable("Tbl_messageType");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_messages", b =>
                {
                    b.Property<long>("messageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MessagePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageVoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_ReciverUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_messageTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_senderUserID")
                        .HasColumnType("bigint");

                    b.Property<string>("messageDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("messageIsSeen")
                        .HasColumnType("bit");

                    b.Property<string>("messageText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("messageID");

                    b.HasIndex("fk_ReciverUserID");

                    b.HasIndex("fk_messageTypeID");

                    b.ToTable("Tbl_messages");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_messagesException", b =>
                {
                    b.Property<long>("messagesExceptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_ExecptionUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("messagesExceptionID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_messagesException");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_militaryServiceSituation", b =>
                {
                    b.Property<long>("mssID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("enMSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prMSS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mssID");

                    b.ToTable("Tbl_militaryServiceSituation");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_muteGroupMessage", b =>
                {
                    b.Property<long>("muteGroupMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_groupID")
                        .HasColumnType("bigint");

                    b.Property<bool>("messageStatus")
                        .HasColumnType("bit");

                    b.HasKey("muteGroupMessageID");

                    b.HasIndex("fk_UserID");

                    b.HasIndex("fk_groupID");

                    b.ToTable("Tbl_muteGroupMessage");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_muteMessages", b =>
                {
                    b.Property<long>("muteMessagesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("fk_ReciverUserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("fk_senderUserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("messageStatus")
                        .HasColumnType("bit");

                    b.HasKey("muteMessagesID");

                    b.HasIndex("fk_ReciverUserID");

                    b.ToTable("Tbl_muteMessages");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_notifications", b =>
                {
                    b.Property<long>("notificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdvNotification")
                        .HasColumnType("bit");

                    b.Property<string>("AdvNotificationRing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MessageNotification")
                        .HasColumnType("bit");

                    b.Property<string>("MessageNotificationRing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("QuestionNotification")
                        .HasColumnType("bit");

                    b.Property<string>("appNotificationRing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("appVibration")
                        .HasColumnType("bit");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("groupNotification")
                        .HasColumnType("bit");

                    b.Property<string>("groupNotificationRing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("notification")
                        .HasColumnType("bit");

                    b.Property<bool>("postNotification")
                        .HasColumnType("bit");

                    b.Property<string>("postNotificationRing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("questionNotificationRing")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("notificationID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_notifications");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_packageOptions", b =>
                {
                    b.Property<long>("packageOptionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_permiumPackageID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_settingID")
                        .HasColumnType("bigint");

                    b.HasKey("packageOptionsID");

                    b.HasIndex("fk_permiumPackageID");

                    b.HasIndex("fk_settingID");

                    b.ToTable("Tbl_packageOptions");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_pay", b =>
                {
                    b.Property<long>("payID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_permiumPackageID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<long>("price")
                        .HasColumnType("bigint");

                    b.HasKey("payID");

                    b.HasIndex("fk_permiumPackageID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_pay");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_permiumPackage", b =>
                {
                    b.Property<long>("permiumPackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("permiumPackageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("selectedOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("permiumPackageID");

                    b.ToTable("Tbl_permiumPackage");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_points", b =>
                {
                    b.Property<long>("pointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("pointTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pointValue")
                        .HasColumnType("int");

                    b.HasKey("pointID");

                    b.ToTable("Tbl_points");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_pointsDetail", b =>
                {
                    b.Property<long>("pointsDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_pointID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("pointDetailDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pointSubDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("subPoint")
                        .HasColumnType("bigint");

                    b.Property<long>("sumPoint")
                        .HasColumnType("bigint");

                    b.HasKey("pointsDetailID");

                    b.HasIndex("fk_pointID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_pointsDetail");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_post", b =>
                {
                    b.Property<long>("postID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeleteDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("PostConfrimStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RegisterDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_PostTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("postDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postID");

                    b.HasIndex("fk_PostTypeID");

                    b.HasIndex("fk_UserID");

                    b.ToTable("Tbl_post");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_postChanged", b =>
                {
                    b.Property<long>("postChangedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("postChangedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postChangedExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postChangedPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("postChangedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("postChangedTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postChangedID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_postChanged");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_postChangedException", b =>
                {
                    b.Property<long>("postChangedExceptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_ExecptionUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("postChangedExceptionID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_postChangedException");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_poster", b =>
                {
                    b.Property<long>("posterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("OnlineOflineStatus")
                        .HasColumnType("bit");

                    b.Property<int>("PosterCapacity")
                        .HasColumnType("int");

                    b.Property<string>("daysOfWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_countryID")
                        .HasColumnType("int");

                    b.Property<int>("fk_genderID")
                        .HasColumnType("int");

                    b.Property<long>("fk_posterTemplateID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("posterAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterContacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterCoust")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterOtherThings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterPrerequisites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("posterStatus")
                        .HasColumnType("bit");

                    b.Property<string>("posterSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timesOfDay")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("posterID");

                    b.HasIndex("fk_countryID");

                    b.HasIndex("fk_genderID");

                    b.HasIndex("fk_posterTemplateID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_poster");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_posterFilter", b =>
                {
                    b.Property<long>("posterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("OnlineOflineStatus")
                        .HasColumnType("bit");

                    b.Property<int>("PosterCapacity")
                        .HasColumnType("int");

                    b.Property<int>("fk_countryID")
                        .HasColumnType("int");

                    b.Property<int>("fk_genderID")
                        .HasColumnType("int");

                    b.Property<string>("posterAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterContacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterCoust")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterOtherThings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterPrerequisites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("posterID");

                    b.HasIndex("fk_countryID");

                    b.HasIndex("fk_genderID");

                    b.ToTable("Tbl_posterFilter");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_posterTemplate", b =>
                {
                    b.Property<long>("posterTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("posterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterFileAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("posterTemplateID");

                    b.ToTable("Tbl_posterTemplate");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_privacy", b =>
                {
                    b.Property<long>("privacyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("LastSeen")
                        .HasColumnType("bit");

                    b.Property<bool>("QuestionAnswer")
                        .HasColumnType("bit");

                    b.Property<bool>("addToGroup")
                        .HasColumnType("bit");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("mention")
                        .HasColumnType("bit");

                    b.Property<bool>("privateMode")
                        .HasColumnType("bit");

                    b.Property<bool>("profilePhoto")
                        .HasColumnType("bit");

                    b.HasKey("privacyID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_privacy");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_province", b =>
                {
                    b.Property<long>("provinceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_countryID")
                        .HasColumnType("int");

                    b.Property<string>("provinceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("provinceID");

                    b.HasIndex("fk_countryID");

                    b.ToTable("Tbl_province");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionFilter", b =>
                {
                    b.Property<long>("questionFilterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("alert")
                        .HasColumnType("bit");

                    b.Property<long>("fk_JobCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_subjectID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("questionFilterStatus")
                        .HasColumnType("bit");

                    b.HasKey("questionFilterID");

                    b.HasIndex("fk_JobCategoryID");

                    b.HasIndex("fk_subjectID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_questionFilter");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionnaire", b =>
                {
                    b.Property<long>("questionnaireID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("answerType")
                        .HasColumnType("int");

                    b.Property<string>("benefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_JobCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_postID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_subjectID")
                        .HasColumnType("bigint");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("questionnaireID");

                    b.HasIndex("fk_JobCategoryID");

                    b.HasIndex("fk_postID");

                    b.HasIndex("fk_subjectID");

                    b.ToTable("Tbl_questionnaire");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionnaireFilter", b =>
                {
                    b.Property<long>("questionnaireFilterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("benefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_subjectID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("questionnaireFilterID");

                    b.HasIndex("fk_subjectID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_questionnaireFilter");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionnaireTemplate", b =>
                {
                    b.Property<long>("questionnaireTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_jobCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("questionnaireTemplateAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("questionnaireTemplateDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("questionnaireTemplateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("questionnaireTemplateID");

                    b.HasIndex("fk_jobCategoryID");

                    b.ToTable("Tbl_questionnaireTemplate");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_reportUsers", b =>
                {
                    b.Property<long>("reportUsersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_ReportedUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_ReportingUSerID")
                        .HasColumnType("bigint");

                    b.Property<bool>("isChecked")
                        .HasColumnType("bit");

                    b.HasKey("reportUsersID");

                    b.HasIndex("fk_ReportingUSerID");

                    b.ToTable("Tbl_reportUsers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_savedQuestion", b =>
                {
                    b.Property<long>("savedQuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_QuestionID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("pin")
                        .HasColumnType("bit");

                    b.HasKey("savedQuestionID");

                    b.HasIndex("fk_QuestionID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_savedQuestion");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_savedQuestionnaire", b =>
                {
                    b.Property<long>("savedQuestionnaireID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_QuestionnaireID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("pin")
                        .HasColumnType("bit");

                    b.HasKey("savedQuestionnaireID");

                    b.HasIndex("fk_QuestionnaireID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_savedQuestionnaire");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_savedTopics", b =>
                {
                    b.Property<long>("savedTopicsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("PinStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowOrHide")
                        .HasColumnType("bit");

                    b.Property<long>("fk_subjectID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("questionOrQuestionnaire")
                        .HasColumnType("bit");

                    b.Property<bool>("savedTopicStatus")
                        .HasColumnType("bit");

                    b.HasKey("savedTopicsID");

                    b.HasIndex("fk_subjectID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_savedTopics");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_setting", b =>
                {
                    b.Property<long>("settingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("enSettingTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prSettingTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("settingID");

                    b.ToTable("Tbl_setting");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_silentUsers", b =>
                {
                    b.Property<long>("silentUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_silentUSerID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("silentUserID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_silentUsers");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_siteSetting", b =>
                {
                    b.Property<int>("siteSettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DescriptionAllowedCharacterCount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDemo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrAboutUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrDemo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrRules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegramID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleAllowedCharacterCount")
                        .HasColumnType("int");

                    b.Property<string>("WhatsAppPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("allowedBlock")
                        .HasColumnType("int");

                    b.Property<string>("enAboutUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enRules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("groupsMemberCount")
                        .HasColumnType("int");

                    b.Property<string>("instagramID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postsShowTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("siteSettingID");

                    b.ToTable("Tbl_siteSetting");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_story", b =>
                {
                    b.Property<long>("storyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("storyPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("storySong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("storyStatus")
                        .HasColumnType("bit");

                    b.Property<string>("storyTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stroryDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("storyID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_story");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_storySeen", b =>
                {
                    b.Property<long>("storySeenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_storyID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("storySeenID");

                    b.HasIndex("fk_storyID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_storySeen");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_subject", b =>
                {
                    b.Property<long>("subjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subjectID");

                    b.ToTable("Tbl_subject");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userAccess", b =>
                {
                    b.Property<int>("userAccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("UnauthorizedWords")
                        .HasColumnType("bit");

                    b.Property<bool>("adv")
                        .HasColumnType("bit");

                    b.Property<bool>("criticsAndSuggestions")
                        .HasColumnType("bit");

                    b.Property<bool>("deleteInformation")
                        .HasColumnType("bit");

                    b.Property<bool>("financialDepartment")
                        .HasColumnType("bit");

                    b.Property<bool>("permiumPackage")
                        .HasColumnType("bit");

                    b.Property<bool>("posts")
                        .HasColumnType("bit");

                    b.Property<bool>("questions")
                        .HasColumnType("bit");

                    b.Property<bool>("reports")
                        .HasColumnType("bit");

                    b.Property<bool>("setting")
                        .HasColumnType("bit");

                    b.Property<bool>("userAccessMenu")
                        .HasColumnType("bit");

                    b.Property<string>("userAccessTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("users")
                        .HasColumnType("bit");

                    b.Property<bool>("usersAdminPanel")
                        .HasColumnType("bit");

                    b.HasKey("userAccessID");

                    b.ToTable("Tbl_userAccess");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userBackGroundSetting", b =>
                {
                    b.Property<long>("userBackGroundSettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("pic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userBackGroundSettingID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_userBackGroundSetting");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userDiscount", b =>
                {
                    b.Property<long>("userDiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_discountID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("userDiscountID");

                    b.HasIndex("fk_discountID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_userDiscount");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userSetting", b =>
                {
                    b.Property<long>("userSettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<long>("fk_settingID")
                        .HasColumnType("bigint");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<bool>("settingStatus")
                        .HasColumnType("bit");

                    b.HasKey("userSettingID");

                    b.HasIndex("fk_settingID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_userSetting");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userType", b =>
                {
                    b.Property<int>("userTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnUserTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrUserTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userTypeID");

                    b.ToTable("Tbl_userType");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_usersQuestions", b =>
                {
                    b.Property<long>("usersQuestionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionAnswerDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionAnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionAnswerTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("answerPoint")
                        .HasColumnType("int");

                    b.Property<string>("fk_admin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.Property<string>("usersQuestionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usersQuestionTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usersQuestionsText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usersQuestionsTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usersQuestionsID");

                    b.HasIndex("fk_admin");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_usersQuestions");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_usersSearchs", b =>
                {
                    b.Property<long>("userSearchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("SearchedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("fk_userID")
                        .HasColumnType("bigint");

                    b.HasKey("userSearchID");

                    b.HasIndex("fk_userID");

                    b.ToTable("Tbl_usersSearchs");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.maritalStatus", b =>
                {
                    b.Property<int>("maritalstatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnMaritalstatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaMaritalstatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maritalstatusID");

                    b.ToTable("Tbl_maritalStatus");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.postType", b =>
                {
                    b.Property<long>("PostTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnPostTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaPostTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostTypeID");

                    b.ToTable("postType");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("DeleteStatus")
                        .HasColumnType("bit");

                    b.Property<int>("Fk_userAccessID")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPic")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("Fk_userAccessID");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_AnswerToQuestion", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_Question", "Questions")
                        .WithMany("Tbl_AnswerToQuestion")
                        .HasForeignKey("fk_QuestiontID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("AnswerToQuestions")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_BlockedUsers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("BlockedUsers")
                        .HasForeignKey("fk_BlockingUSerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_CommentLike", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_AnswerToQuestion", "AnswersToQuestions")
                        .WithMany("CommentLikes")
                        .HasForeignKey("fk_AnswerToQuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("CommentLikes")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_DeclarationOfReadiness", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_questionnaire", "Questionnaires")
                        .WithMany("Declarations")
                        .HasForeignKey("fk_questionnaireID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Declarations")
                        .HasForeignKey("fk_volunteerUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_EmploymentAdvApply", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.ApplicationUser", null)
                        .WithMany("EmploymentAdvApplies")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("EmploymentAdvApplies")
                        .HasForeignKey("fk_ApplicantUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("EmploymentAdvApplies")
                        .HasForeignKey("fk_postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_EmploymentAdvPost", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_CooperationType", "CooperationTypes")
                        .WithMany("Tbl_EmploymentAdvPost")
                        .HasForeignKey("fk_CooperationTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("EmploymentAdvPosts")
                        .HasForeignKey("fk_PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_countries", "Countries")
                        .WithMany("Tbl_EmploymentAdvPost")
                        .HasForeignKey("fk_countryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_gender", "Genders")
                        .WithMany("EmploymentAdvPosts")
                        .HasForeignKey("fk_genderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_grade", "Grades")
                        .WithMany("EmploymentAdvPosts")
                        .HasForeignKey("fk_grageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_jobCategory", "JobCategories")
                        .WithMany("EmploymentAdvPosts")
                        .HasForeignKey("fk_jobCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_militaryServiceSituation", "MilitaryServices")
                        .WithMany("Tbl_EmploymentAdvPost")
                        .HasForeignKey("fk_mssID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_province", "Provinces")
                        .WithMany("EmploymentAdvPosts")
                        .HasForeignKey("fk_provinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_FrequentlyAskedQuestions", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_FrequentlyAskedQuestionsSubject", "FrequentlyAskedQuestionsSubjects")
                        .WithMany("FrequentlyAskedQuestions")
                        .HasForeignKey("fk_SubjectID");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Logins", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Logins")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_MuteUsers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("MuteUsers")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_PostFile", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("PostFiles")
                        .HasForeignKey("fk_postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_PostForward", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("PostForwards")
                        .HasForeignKey("fk_ForwardedUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("PostForwards")
                        .HasForeignKey("fk_PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_PostLike", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("PostLikes")
                        .HasForeignKey("fk_PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("PostLikes")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Question", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_province", null)
                        .WithMany("Questions")
                        .HasForeignKey("Tbl_provinceprovinceID");

                    b.HasOne("RadFBApp.Models.Data.Tbl_jobCategory", "JobCategories")
                        .WithMany("Questions")
                        .HasForeignKey("fk_JobCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("Questions")
                        .HasForeignKey("fk_postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_subject", "Subjects")
                        .WithMany("Questions")
                        .HasForeignKey("fk_subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_RadFBUsers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_countries", "Countries")
                        .WithMany("Tbl_RadFBUsers")
                        .HasForeignKey("fk_countryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_jobCategory", "JobCategories")
                        .WithMany("Users")
                        .HasForeignKey("fk_jobCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_province", "Provinces")
                        .WithMany("RadFBUsers")
                        .HasForeignKey("fk_provinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_userType", "UserTypes")
                        .WithMany("Users")
                        .HasForeignKey("fk_userTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_RealCient", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.maritalStatus", "MaritalStatus")
                        .WithMany("RealClients")
                        .HasForeignKey("Fk_maritalstatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_CooperationType", "CooperationTypes")
                        .WithMany("RealClients")
                        .HasForeignKey("fk_CooperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_gender", "Genders")
                        .WithMany("RealClients")
                        .HasForeignKey("fk_GenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("RealCients")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_militaryServiceSituation", "MilitaryStatus")
                        .WithMany("RealClients")
                        .HasForeignKey("fk_mssID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_SuggestionUsers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("SuggestionUsers")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UnauthorizedWords", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.ApplicationUser", "AppUsers")
                        .WithMany("UnauthorizedWords")
                        .HasForeignKey("fk_ApplicationUser");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserEducationalBackground", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserEducationalBackgrounds")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_grade", "Grades")
                        .WithMany("UserEducationalBackgrounds")
                        .HasForeignKey("fk_gradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_major", "Majors")
                        .WithMany("UserEducationalBackgrounds")
                        .HasForeignKey("fk_majorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserFavorites", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserFavorites")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserJobStatus", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_jobStatus", "JobStatus")
                        .WithMany("UserJobStatus")
                        .HasForeignKey("fk_JobStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserJobStatus")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserRegistrationCourses", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserRegistrationCourses")
                        .HasForeignKey("fk_RegisteredUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_poster", "Posters")
                        .WithMany("UserRegistrationCourses")
                        .HasForeignKey("fk_posterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserWorkExperience", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserWorkExperiences")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UserWorkExperienceStamp", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserWorkExperienceStamps")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_UserWorkExperience", "UserWorkExperiences")
                        .WithMany("UserWorkExperienceStamps")
                        .HasForeignKey("fk_UserWorkExperienceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UsersPackage", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_permiumPackage", "PremiumPackages")
                        .WithMany("UsersPackages")
                        .HasForeignKey("fk_packageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_pay", "Pays")
                        .WithMany("UsersPackages")
                        .HasForeignKey("fk_payID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UsersPackages")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_UsersSkills", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_Skills", "Skills")
                        .WithMany("UsersSkills")
                        .HasForeignKey("fk_SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UsersSkills")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_VisitedPosts", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("VisitedPosts")
                        .HasForeignKey("fk_PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("VisitedPosts")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_Voluntaryworks", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Voluntaryworks")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_activeSesion", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("ActiveSessions")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_activities", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.ApplicationUser", null)
                        .WithMany("Activities")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Activities")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_awards", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Awards")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_calender", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Calendars")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_criticsAndSuggestions", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Criticism")
                        .HasForeignKey("fk_senderUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_factor", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_pay", "Pays")
                        .WithMany("Tbl_factor")
                        .HasForeignKey("fk_payID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_followers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Followers")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_group", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Groups")
                        .HasForeignKey("fk_creatorUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_groupException", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_group", "Groups")
                        .WithMany("GroupExceptions")
                        .HasForeignKey("fk_ExecptionGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("GroupExceptions")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_groupMessages", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_group", "Groups")
                        .WithMany("GroupMessages")
                        .HasForeignKey("fk_groupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_messageType", "MessageTypes")
                        .WithMany("GroupMessages")
                        .HasForeignKey("fk_messageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("GroupMessages")
                        .HasForeignKey("fk_senderUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_jobCategory", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_guild", "Guilds")
                        .WithMany("jobCategories")
                        .HasForeignKey("fk_guildID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_keyWords", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("KeyWords")
                        .HasForeignKey("fk_postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_legalClient", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("LegalClients")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_memberOfGroup", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("MemberOfGroups")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_group", "Groups")
                        .WithMany("MemberOfGroups")
                        .HasForeignKey("fk_groupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_messages", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Messages")
                        .HasForeignKey("fk_ReciverUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_messageType", "MessageTypes")
                        .WithMany("Messages")
                        .HasForeignKey("fk_messageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_messagesException", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("MessagesExceptions")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_muteGroupMessage", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("MuteGroupMessages")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_group", "Groups")
                        .WithMany("MuteGroupMessages")
                        .HasForeignKey("fk_groupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_muteMessages", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("MuteMessages")
                        .HasForeignKey("fk_ReciverUserID");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_notifications", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Notifications")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_packageOptions", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_permiumPackage", "PermiumPackages")
                        .WithMany("PackageOptions")
                        .HasForeignKey("fk_permiumPackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_setting", "Settings")
                        .WithMany("PackageOptions")
                        .HasForeignKey("fk_settingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_pay", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_permiumPackage", "PermiumPackages")
                        .WithMany("Pays")
                        .HasForeignKey("fk_permiumPackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Pays")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_pointsDetail", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_points", "Points")
                        .WithMany("PointsDetails")
                        .HasForeignKey("fk_pointID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("PointsDetails")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_post", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.postType", "PostTypes")
                        .WithMany("Posts")
                        .HasForeignKey("fk_PostTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Posts")
                        .HasForeignKey("fk_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_postChanged", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("PostsChanged")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_postChangedException", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("PostChangedExceptions")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_poster", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_countries", "Countries")
                        .WithMany("Posters")
                        .HasForeignKey("fk_countryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_gender", "Genders")
                        .WithMany("Posters")
                        .HasForeignKey("fk_genderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_posterTemplate", "PosterTemplates")
                        .WithMany("Posters")
                        .HasForeignKey("fk_posterTemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Posters")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_posterFilter", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_countries", "Countries")
                        .WithMany("PosterFilters")
                        .HasForeignKey("fk_countryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_gender", "Genders")
                        .WithMany("PosterFilters")
                        .HasForeignKey("fk_genderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_privacy", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Privacy")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_province", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_countries", "Countries")
                        .WithMany("Provinces")
                        .HasForeignKey("fk_countryID");
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionFilter", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_jobCategory", "JobCategories")
                        .WithMany("QuestionFilters")
                        .HasForeignKey("fk_JobCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_subject", "Subjects")
                        .WithMany("QuestionFilters")
                        .HasForeignKey("fk_subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("QuestionFilters")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionnaire", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_jobCategory", "JobCategories")
                        .WithMany("Questionnaires")
                        .HasForeignKey("fk_JobCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_post", "Posts")
                        .WithMany("Questionnaires")
                        .HasForeignKey("fk_postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_subject", "Subjects")
                        .WithMany("Questionnaires")
                        .HasForeignKey("fk_subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionnaireFilter", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_subject", "Subjects")
                        .WithMany("QuestionnaireFilters")
                        .HasForeignKey("fk_subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("QuestionnaireFilters")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_questionnaireTemplate", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_jobCategory", "JobCategories")
                        .WithMany("QuestionnaireTemplates")
                        .HasForeignKey("fk_jobCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_reportUsers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("ReportUsers")
                        .HasForeignKey("fk_ReportingUSerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_savedQuestion", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_Question", "Questions")
                        .WithMany("SavedQuestions")
                        .HasForeignKey("fk_QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("SavedQuestions")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_savedQuestionnaire", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_questionnaire", "Questionnaires")
                        .WithMany("SavedQuestionnaires")
                        .HasForeignKey("fk_QuestionnaireID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("SavedQuestionnaires")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_savedTopics", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_subject", "Subjects")
                        .WithMany("SavedTopics")
                        .HasForeignKey("fk_subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("SavedTopics")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_silentUsers", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("SilentUsers")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_story", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("Stories")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_storySeen", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_story", "Stories")
                        .WithMany("StorySeen")
                        .HasForeignKey("fk_storyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("StorySeen")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userBackGroundSetting", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserBackGroundSettings")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userDiscount", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_discount", "Discounts")
                        .WithMany("UserDiscounts")
                        .HasForeignKey("fk_discountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserDiscounts")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_userSetting", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_setting", "Settings")
                        .WithMany("UserSettings")
                        .HasForeignKey("fk_settingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UserSettings")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_usersQuestions", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.ApplicationUser", "AppUsers")
                        .WithMany("UsersQuestions")
                        .HasForeignKey("fk_admin");

                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UsersQuestions")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.Tbl_usersSearchs", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_RadFBUsers", "Users")
                        .WithMany("UsersSearchs")
                        .HasForeignKey("fk_userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadFBApp.Models.Data.ApplicationUser", b =>
                {
                    b.HasOne("RadFBApp.Models.Data.Tbl_userAccess", "UserAccess")
                        .WithMany("AppUsers")
                        .HasForeignKey("Fk_userAccessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
